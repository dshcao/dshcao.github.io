<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>android on dshcao blog</title>
    <link>https://dshcao.github.io/zh/tags/android/</link>
    <description>Recent content in android on dshcao blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>513996717@qq.com (dshcao)</managingEditor>
    <webMaster>513996717@qq.com (dshcao)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 20 May 2020 10:33:41 +0900</lastBuildDate>
    
        <atom:link href="https://dshcao.github.io/zh/tags/android/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>Android-OkHttp分析</title>
        <link>https://dshcao.github.io/zh/posts/android-okhttp%E5%88%86%E6%9E%90/</link>
        <pubDate>Wed, 20 May 2020 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-okhttp%E5%88%86%E6%9E%90/</guid>
        <description>前言 源码分析部分基于 OkHttp4.7.2。 Spdy 一种开放的网络传输协议，由Google开发的基于传输控制协议（TCP）的应用层协议。HTTP/</description>
      </item>
      
      <item>
        <title>自定义view-ImageCropView</title>
        <link>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-imagecropview/</link>
        <pubDate>Fri, 27 Dec 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-imagecropview/</guid>
        <description>项目中需要为用户截取头像，刚开始调用系统自带功能，代码如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 Intent intent = new Intent(&amp;#34;com.android.camera.action.CROP&amp;#34;); intent.setDataAndType(Uri.fromFile(new File(itemData.getPath())), &amp;#34;image/*&amp;#34;); intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); intent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION); // crop=tr</description>
      </item>
      
      <item>
        <title>Android RenderScript使用</title>
        <link>https://dshcao.github.io/zh/posts/renderscript%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/renderscript%E4%BD%BF%E7%94%A8/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Android 转场动画Transition</title>
        <link>https://dshcao.github.io/zh/posts/android-%E8%BD%AC%E5%9C%BA%E5%8A%A8%E7%94%BBtransition/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E8%BD%AC%E5%9C%BA%E5%8A%A8%E7%94%BBtransition/</guid>
        <description>Transition Android中Transition是两个场景(Scene)之间的一个过渡转场动画效果。 Transition有两个构造函数 1 2 3 4 5 6 //</description>
      </item>
      
      <item>
        <title>Android源码解析-Handler</title>
        <link>https://dshcao.github.io/zh/posts/android-handler%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-handler%E8%A7%A3%E6%9E%90/</guid>
        <description>前言 Handler使Android中非常重要的组成部门，很多地方包括系统服务也大量用到Handler这一机制。Handler让我们的开发难度</description>
      </item>
      
      <item>
        <title>Jetpack-JobService详解</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-jobservice/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-jobservice/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Jetpack-Lifecycles</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-lifecycles/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-lifecycles/</guid>
        <description>原理 ReportFragment ProcessLifecycleOwner ActivityInitializationListener LifecycleOwner&amp;amp;LifecycleObserver LifecycleRegistry&amp;amp;Lifecycle LiveData既是观察者也是被观察者 作为观察者可以观察Activity和Fragment的生命周期 通常将LiveData包在</description>
      </item>
      
      <item>
        <title>Jetpack-Navigation详解</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-navigation/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-navigation/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Jetpack-Room&amp;LiveData&amp;ViewModel详解</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-roomlivedataviewmodel%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-roomlivedataviewmodel%E8%AF%A6%E8%A7%A3/</guid>
        <description>Room升级 当数据表结构变化时如何直接修改version会导致数据库数据被清空 1 2 3 4 5 6 7 8 return Room.databaseBuilder(context, AppDatabase::class.java, &amp;#34;dsh&amp;#34;).allowMainThreadQueries().addMigrations(Migration1000To1001()).build() class Migration1000To1001 : Migration(1000, 1001) { override fun migrate(database: SupportSQLiteDatabase) { database.execSQL(&amp;#34;alter table user add column vip integer not</description>
      </item>
      
      <item>
        <title>Jetpack-WorkManager详解</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-workmanager/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-workmanager/</guid>
        <description>谷歌使用Room数据库保存任务及Alarm来保证 WorkManager是一定会执行的，最小间隔是15min</description>
      </item>
      
      <item>
        <title>Kotlin语法</title>
        <link>https://dshcao.github.io/zh/posts/kotlin-%E8%AF%AD%E6%B3%95/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/kotlin-%E8%AF%AD%E6%B3%95/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Android源码解析-NestedScrolling</title>
        <link>https://dshcao.github.io/zh/posts/android-nestedscrolling%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Wed, 11 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-nestedscrolling%E8%A7%A3%E6%9E%90/</guid>
        <description>嵌套滑动实现原理及执行过程 嵌套滑动其实就是一套嵌套滑动回调。难的是嵌套滑动是如何回调的。理解嵌套滑动应该试着从嵌套滑动API的设计者思考。如</description>
      </item>
      
      <item>
        <title>Android Scroller解析及应用</title>
        <link>https://dshcao.github.io/zh/posts/android-scroller%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Wed, 11 Dec 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-scroller%E8%A7%A3%E6%9E%90/</guid>
        <description>OverScroller简介 OverScroller中两个重要属性： mMode有两个滚动模式：SCROLL_MODE FLING_MODE SplineOverScroller mState有三个滚</description>
      </item>
      
      <item>
        <title>Android AMS</title>
        <link>https://dshcao.github.io/zh/posts/android-wms/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-wms/</guid>
        <description>前言 WMS和AMS一样运行在SystemServer进程中。WMS控制所有Window的显示、隐藏以及显示的位置。 WindowManager&amp;amp;PhoneWindowManager&amp;amp;WindowManagerService 两者关系和Activit</description>
      </item>
      
      <item>
        <title>Android AppBundle</title>
        <link>https://dshcao.github.io/zh/posts/android-app-bundle/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-app-bundle/</guid>
        <description>ClassLoader,java的ClassLoader双亲委托机制 干预Android加载，既然要干预那就要首先了解其原加载过程 ## 双亲委托 简</description>
      </item>
      
      <item>
        <title>Android App优化-Apk瘦身</title>
        <link>https://dshcao.github.io/zh/posts/android-app%E4%BC%98%E5%8C%96-apk%E7%98%A6%E8%BA%AB/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-app%E4%BC%98%E5%8C%96-apk%E7%98%A6%E8%BA%AB/</guid>
        <description>APK体积优化 svg/vector替换套图小图标 使用SVG替代简单的小图标及图标套图 SVG：可缩放矢量图，不会因为缩放导致图片质量下降。常用</description>
      </item>
      
      <item>
        <title>Android App优化-存储优化</title>
        <link>https://dshcao.github.io/zh/posts/android-app%E4%BC%98%E5%8C%96-%E5%AD%98%E5%82%A8%E4%BC%98%E5%8C%96/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-app%E4%BC%98%E5%8C%96-%E5%AD%98%E5%82%A8%E4%BC%98%E5%8C%96/</guid>
        <description>Protobuf 7zip 微信开源MMKV 参考： GitHub battery-historian googleprotobuf</description>
      </item>
      
      <item>
        <title>Android App优化-安装包优化</title>
        <link>https://dshcao.github.io/zh/posts/android-app%E4%BC%98%E5%8C%96-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-app%E4%BC%98%E5%8C%96-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</guid>
        <description>前言 既然是性能优化，首先明确优化的方向在哪。 在Android App中首先最重要的是不能Crash，不能ANR，其次不能卡顿，再其次是耗电，再</description>
      </item>
      
      <item>
        <title>Android App优化-耗电优化</title>
        <link>https://dshcao.github.io/zh/posts/android-app%E4%BC%98%E5%8C%96-%E8%80%97%E7%94%B5%E4%BC%98%E5%8C%96/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-app%E4%BC%98%E5%8C%96-%E8%80%97%E7%94%B5%E4%BC%98%E5%8C%96/</guid>
        <description>battery-historian Mac battery-historian安装配置 安装go环境 只支持1.8.1以上版本 安装git 安装python 只支持2.7版本不支持3.x版本</description>
      </item>
      
      <item>
        <title>Android PMS</title>
        <link>https://dshcao.github.io/zh/posts/android-pms/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-pms/</guid>
        <description>前言 PMS和AMS一样运行在SystemServer进程中。SystemServer启动时会调用PackageManagerService#</description>
      </item>
      
      <item>
        <title>Android ServiceManager&amp;SystemServer</title>
        <link>https://dshcao.github.io/zh/posts/android-systemserverservicemanager/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-systemserverservicemanager/</guid>
        <description>前言 SystemServer是系统进程，SystemServer负责启动很多系统服务，App通过Binder跨进程通信使用这些系统服务，Se</description>
      </item>
      
      <item>
        <title>Android-App适配</title>
        <link>https://dshcao.github.io/zh/posts/android-app%E9%80%82%E9%85%8D/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-app%E9%80%82%E9%85%8D/</guid>
        <description>屏幕适配 首先我们需要明白几个概念： 分辨率 屏幕像素点总数(如：1080x1920) 屏幕尺寸 手机屏幕对角线英寸(inch)单位的位物理尺寸(如：</description>
      </item>
      
      <item>
        <title>Android-Binder机制(一)</title>
        <link>https://dshcao.github.io/zh/posts/android-binder%E6%9C%BA%E5%88%B6%E4%B8%80/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-binder%E6%9C%BA%E5%88%B6%E4%B8%80/</guid>
        <description>前沿 Android Binder是在OpneBinder上的定制实现。Binder是Android系统中大量使用的IPC（Inter-process com</description>
      </item>
      
      <item>
        <title>Android-Bitmap缓存与复用及长图加载</title>
        <link>https://dshcao.github.io/zh/posts/android-bitmap%E7%BC%93%E5%AD%98%E4%B8%8E%E5%A4%8D%E7%94%A8%E5%8F%8A%E9%95%BF%E5%9B%BE%E5%8A%A0%E8%BD%BD/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-bitmap%E7%BC%93%E5%AD%98%E4%B8%8E%E5%A4%8D%E7%94%A8%E5%8F%8A%E9%95%BF%E5%9B%BE%E5%8A%A0%E8%BD%BD/</guid>
        <description>bitmap.getPixels(); bitmap.getRowBytes(); bitmap.getByteCount(); bitmap.getAllocationByteCount(); 图像基础知识 ARGB_8888 RGB_565 Bitmap API解析 Bitmap BitmapFactory BitmapFactory.Options inPreferredConfig 设置图片解码后的像素格式，如：ARGB8888、RGB565 inSampleSize 设置图片采样率进行图片缩放显示，比</description>
      </item>
      
      <item>
        <title>Android-draw&amp;onDraw</title>
        <link>https://dshcao.github.io/zh/posts/android-drawondraw/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-drawondraw/</guid>
        <description>前言 Android应用将经过测量、布局、绘制的surface缓存数据通过SurfaceFlinger渲染到显示屏幕上，通过Android的刷</description>
      </item>
      
      <item>
        <title>Android-FFmpeg使用</title>
        <link>https://dshcao.github.io/zh/posts/android-ffmpeg%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-ffmpeg%E4%BD%BF%E7%94%A8/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Android-Glide分析</title>
        <link>https://dshcao.github.io/zh/posts/android-glide%E5%88%86%E6%9E%90/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-glide%E5%88%86%E6%9E%90/</guid>
        <description>前言 本节源码分析基于 Glide 4.11.0 Glide优势 Glide的常见用法 源码解析 Glide缓存又两类四种： 内存缓存 活动缓存(ActiveResource)</description>
      </item>
      
      <item>
        <title>Android-JNI&amp;NDK</title>
        <link>https://dshcao.github.io/zh/posts/android-jnindk/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-jnindk/</guid>
        <description>前言 Linux系统Native动态库(.so)、静态库(.a)及目标文件(.o)。 Windows系统Native动态库(.dll)、静态库(</description>
      </item>
      
      <item>
        <title>Android-MVC、MVP及MVVM</title>
        <link>https://dshcao.github.io/zh/posts/android-mvcmvp%E5%8F%8Amvvm/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-mvcmvp%E5%8F%8Amvvm/</guid>
        <description>MVC Model+View+Controller Model：Java bean View：视图层 Controller：控制器 MVC在Java Web开发中很常见，但并不适合Android中使用。因</description>
      </item>
      
      <item>
        <title>Android-Retrofit分析</title>
        <link>https://dshcao.github.io/zh/posts/android-retrofit%E5%88%86%E6%9E%90/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-retrofit%E5%88%86%E6%9E%90/</guid>
        <description>前言 官方介绍：A type-safe HTTP client for Android and Java. Retrofit是通过动态代理实现对OkHttp封装实现面向接口编程的经典网络库。并通过附加库(转换器和适配器</description>
      </item>
      
      <item>
        <title>Android-WebView使用</title>
        <link>https://dshcao.github.io/zh/posts/android-webview%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-webview%E4%BD%BF%E7%94%A8/</guid>
        <description>占坑，敬请期待&amp;hellip; 前言 Android4.4以前采用的是WebKit内核，Android4.4及以后采用的是chromium内核。</description>
      </item>
      
      <item>
        <title>Android-增量更新实现</title>
        <link>https://dshcao.github.io/zh/posts/android-%E5%A2%9E%E9%87%8F%E6%9B%B4%E6%96%B0%E5%AE%9E%E7%8E%B0/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E5%A2%9E%E9%87%8F%E6%9B%B4%E6%96%B0%E5%AE%9E%E7%8E%B0/</guid>
        <description>占坑，敬请期待&amp;hellip;</description>
      </item>
      
      <item>
        <title>Android-多进程意义及Binder</title>
        <link>https://dshcao.github.io/zh/posts/android-%E8%BF%9B%E7%A8%8B%E5%8F%8Abinder/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E8%BF%9B%E7%A8%8B%E5%8F%8Abinder/</guid>
        <description>进程 什么是进程 Android进程分类 Android中有五大进程： 前台进程 当前正与用户交互的进程 可见进程 在屏幕中显示，但处于不可交互状态，如s</description>
      </item>
      
      <item>
        <title>Android-添加pdf功能</title>
        <link>https://dshcao.github.io/zh/posts/android-%E6%B7%BB%E5%8A%A0pdf%E5%8A%9F%E8%83%BD/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E6%B7%BB%E5%8A%A0pdf%E5%8A%9F%E8%83%BD/</guid>
        <description>Android SDK自带PdfDocument，详见参考PdfDocument 功能相对简单 iText 适用java iTextG iText的Android版本，iText几乎</description>
      </item>
      
      <item>
        <title>Android-热更新</title>
        <link>https://dshcao.github.io/zh/posts/android-%E7%83%AD%E6%9B%B4%E6%96%B0/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E7%83%AD%E6%9B%B4%E6%96%B0/</guid>
        <description>热修复方案介绍 AndFix Native层函数指针替换，即时生效 QQ控件超级补丁 类加载/multidex，重启生效 Robust 字节码插桩/Instant Run 即时生效</description>
      </item>
      
      <item>
        <title>Android-音视频基础知识(一)</title>
        <link>https://dshcao.github.io/zh/posts/android-%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80/</guid>
        <description>RGB&amp;amp;YUV RGB 红色(R)、绿色(G)、蓝色(B)三原色编码颜色。一般显示器上采用的标准。其中每个原色用一个字节(8bit)表示，一个像素点占用3字节(</description>
      </item>
      
      <item>
        <title>Android四大组件-Activity/Fragment</title>
        <link>https://dshcao.github.io/zh/posts/android-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6-activityfragment/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6-activityfragment/</guid>
        <description>Activity 生命周期 当用户打开新的Activity的时候或者切换到桌面的时候回调onPause-onStop，但是如果此Activity是透明主题，那</description>
      </item>
      
      <item>
        <title>Android四大组件-Service</title>
        <link>https://dshcao.github.io/zh/posts/android-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6-service/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6-service/</guid>
        <description>前言 Service Service默认运行在主线程，并不运行在单独线程，因此在Service执行耗时操作容易引起ANR。 只有在内存过低且必须回收系统资源以</description>
      </item>
      
      <item>
        <title>Android打包流程</title>
        <link>https://dshcao.github.io/zh/posts/android-app%E6%89%93%E5%8C%85%E6%B5%81%E7%A8%8B/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-app%E6%89%93%E5%8C%85%E6%B5%81%E7%A8%8B/</guid>
        <description>前言 说打包流程前我们先了解几个名词和概念 AAPT(Android Asset Packing Tool) AAPT是一种编译工具，用于Android Studio和Android Gradle Plugin 编译打包应用资源A</description>
      </item>
      
      <item>
        <title>Android插件化</title>
        <link>https://dshcao.github.io/zh/posts/android-%E6%8F%92%E4%BB%B6%E5%8C%96/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E6%8F%92%E4%BB%B6%E5%8C%96/</guid>
        <description>开源插件化框架 VirtualAPK、DroidPlugin、RePlugin Hook 实现Hook的技术：1.反射 2.动态代理 查找Hook点的原则 尽</description>
      </item>
      
      <item>
        <title>Android直播-录制屏幕</title>
        <link>https://dshcao.github.io/zh/posts/%E7%9B%B4%E6%92%AD-%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E7%9B%B4%E6%92%AD-%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95/</guid>
        <description>录屏的根本是怎么获取屏幕的显示数据 屏幕录制的几种实现方式： Linux+framebuffer+root权限 利用View.getDrawing</description>
      </item>
      
      <item>
        <title>Android直播-采录摄像头</title>
        <link>https://dshcao.github.io/zh/posts/%E7%9B%B4%E6%92%AD-%E9%87%87%E5%BD%95%E6%91%84%E5%83%8F%E5%A4%B4/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E7%9B%B4%E6%92%AD-%E9%87%87%E5%BD%95%E6%91%84%E5%83%8F%E5%A4%B4/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Jetpack-CameraX</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-camerax/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-camerax/</guid>
        <description>一、camera2 CameraX是Jetpack对camera2功能的封装，并可向后兼容至 Android 5.0（API 级别 21）</description>
      </item>
      
      <item>
        <title>JVM/Dalvik/ART</title>
        <link>https://dshcao.github.io/zh/posts/jvmdalvikart/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jvmdalvikart/</guid>
        <description>前置知识 Android中每个应用都对应一个单独的虚拟机，独立运行 JIT&amp;amp;AOT JIT，Just-in-time，即时编译，运行时动态编译。在运行时将频繁</description>
      </item>
      
      <item>
        <title>macOs使用Charles抓包App网络请求</title>
        <link>https://dshcao.github.io/zh/posts/macos%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85app%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/macos%E4%BD%BF%E7%94%A8charles%E6%8A%93%E5%8C%85app%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</guid>
        <description>安装 Charles4.5.6&amp;amp;macOS10.14.5，安装-&amp;gt;找注册账号或破解 配置 Help -&amp;gt; SSL Proxying -&amp;gt; Install Charles Root Certificate然而</description>
      </item>
      
      <item>
        <title>RxJava2源码及使用</title>
        <link>https://dshcao.github.io/zh/posts/rxjava2%E6%BA%90%E7%A0%81%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/rxjava2%E6%BA%90%E7%A0%81%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
        <description>前言 RxJava是一个响应式的异步事件流编程库。 RxJava的优势： 函数式编程，代码逻辑清晰，优雅 避险回调地狱 方便的线程调度 RxJava中主</description>
      </item>
      
      <item>
        <title>SparseArray源码解析</title>
        <link>https://dshcao.github.io/zh/posts/android-sparsearray%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-sparsearray%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</guid>
        <description>前言 SparseArray是谷歌推荐使用的数据结构，可以取代部分HashMap功能。为什么是部分？因为SparseArray是以int为ke</description>
      </item>
      
      <item>
        <title>自定义View-measure&amp;layout</title>
        <link>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-measurelayoutdraw/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-measurelayoutdraw/</guid>
        <description>View&amp;amp;ViewGroup的自定义 measure/onMeasure measure 是View测量自己所需空间的方法，通常是调用onMeasure方法完成子控件的测量并最终确定</description>
      </item>
      
      <item>
        <title>自定义View-PullLayout</title>
        <link>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-pulllayout/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-pulllayout/</guid>
        <description></description>
      </item>
      
      <item>
        <title>贝塞尔曲线(Bezier curve)</title>
        <link>https://dshcao.github.io/zh/posts/%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF/</guid>
        <description>前置知识 Bezier曲线是用一系列点控制曲线状态的，主要分为： 数据点 确定曲线的起始和结束位置 控制点 确定曲线的弯曲程度 其中数据点又叫锚点，只有</description>
      </item>
      
    
  </channel>
</rss>