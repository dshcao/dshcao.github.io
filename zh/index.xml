<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dshcao blog</title>
    <link>https://dshcao.github.io/zh/</link>
    <description>Recent content on dshcao blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>513996717@qq.com (dshcao)</managingEditor>
    <webMaster>513996717@qq.com (dshcao)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 27 Dec 2019 10:33:41 +0900</lastBuildDate>
    
        <atom:link href="https://dshcao.github.io/zh/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>自定义view-ImageCropView</title>
        <link>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-imagecropview/</link>
        <pubDate>Fri, 27 Dec 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-imagecropview/</guid>
        <description>项目中需要为用户截取头像，刚开始调用系统自带功能，代码如下： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 Intent intent = new Intent(&amp;#34;com.android.camera.action.CROP&amp;#34;); intent.setDataAndType(Uri.fromFile(new File(itemData.getPath())), &amp;#34;image/*&amp;#34;); intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION); intent.addFlags(Intent.FLAG_GRANT_WRITE_URI_PERMISSION); // crop=tr</description>
      </item>
      
      <item>
        <title>Android RenderScript使用</title>
        <link>https://dshcao.github.io/zh/posts/renderscript%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/renderscript%E4%BD%BF%E7%94%A8/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Android 转场动画Transition</title>
        <link>https://dshcao.github.io/zh/posts/android-%E8%BD%AC%E5%9C%BA%E5%8A%A8%E7%94%BBtransition/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E8%BD%AC%E5%9C%BA%E5%8A%A8%E7%94%BBtransition/</guid>
        <description>Transition Android中Transition是两个场景(Scene)之间的一个过渡转场动画效果。 Transition有两个构造函数 1 2 3 4 5 6 //</description>
      </item>
      
      <item>
        <title>Android源码解析-Handler</title>
        <link>https://dshcao.github.io/zh/posts/android-handler%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-handler%E8%A7%A3%E6%9E%90/</guid>
        <description>前言 Handler使Android中非常重要的组成部门，很多地方包括系统服务也大量用到Handler这一机制。Handler让我们的开发难度</description>
      </item>
      
      <item>
        <title>Http/Https详解</title>
        <link>https://dshcao.github.io/zh/posts/httphttps/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/httphttps/</guid>
        <description>HTTP(HyperText Transfer Protocol) 超文本传输协议，虽然名字叫传输协议，但其其实是应用层的协议，是构建在传输层协议TCP之上的协议。 http版本 诞生年份 HTTP/0.9 1991 文本信息 HTTP/1.0 1996 文</description>
      </item>
      
      <item>
        <title>Jetpack-JobService详解</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-jobservice/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-jobservice/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Jetpack-Lifecycles</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-lifecycles/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-lifecycles/</guid>
        <description>原理 ReportFragment ProcessLifecycleOwner ActivityInitializationListener LifecycleOwner&amp;amp;LifecycleObserver LifecycleRegistry&amp;amp;Lifecycle LiveData既是观察者也是被观察者 作为观察者可以观察Activity和Fragment的生命周期 通常将LiveData包在</description>
      </item>
      
      <item>
        <title>Jetpack-Navigation详解</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-navigation/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-navigation/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Jetpack-Room&amp;LiveData&amp;ViewModel详解</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-roomlivedataviewmodel%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-roomlivedataviewmodel%E8%AF%A6%E8%A7%A3/</guid>
        <description>Room升级 当数据表结构变化时如何直接修改version会导致数据库数据被清空 1 2 3 4 5 6 7 8 return Room.databaseBuilder(context, AppDatabase::class.java, &amp;#34;dsh&amp;#34;).allowMainThreadQueries().addMigrations(Migration1000To1001()).build() class Migration1000To1001 : Migration(1000, 1001) { override fun migrate(database: SupportSQLiteDatabase) { database.execSQL(&amp;#34;alter table user add column vip integer not</description>
      </item>
      
      <item>
        <title>Jetpack-WorkManager详解</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-workmanager/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-workmanager/</guid>
        <description>谷歌使用Room数据库保存任务及Alarm来保证 WorkManager是一定会执行的，最小间隔是15min</description>
      </item>
      
      <item>
        <title>Kotlin语法</title>
        <link>https://dshcao.github.io/zh/posts/kotlin-%E8%AF%AD%E6%B3%95/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/kotlin-%E8%AF%AD%E6%B3%95/</guid>
        <description></description>
      </item>
      
      <item>
        <title>写在开始</title>
        <link>https://dshcao.github.io/zh/posts/%E5%86%99%E5%9C%A8%E5%BC%80%E5%A7%8B/</link>
        <pubDate>Mon, 23 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E5%86%99%E5%9C%A8%E5%BC%80%E5%A7%8B/</guid>
        <description>工作已经很多年，但基本没写过博客。为什么？！！！当然是懒了！！！ 难道工作这么多年就没有想记录或者没有想写的内容吗？当然有！平时把记录的内容都</description>
      </item>
      
      <item>
        <title>Android源码解析-NestedScrolling</title>
        <link>https://dshcao.github.io/zh/posts/android-nestedscrolling%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Wed, 11 Dec 2019 12:00:06 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-nestedscrolling%E8%A7%A3%E6%9E%90/</guid>
        <description>嵌套滑动实现原理及执行过程 嵌套滑动其实就是一套嵌套滑动回调。难的是嵌套滑动是如何回调的。理解嵌套滑动应该试着从嵌套滑动API的设计者思考。如</description>
      </item>
      
      <item>
        <title>Android Scroller解析及应用</title>
        <link>https://dshcao.github.io/zh/posts/android-scroller%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Wed, 11 Dec 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-scroller%E8%A7%A3%E6%9E%90/</guid>
        <description>OverScroller简介 OverScroller中两个重要属性： mMode有两个滚动模式：SCROLL_MODE FLING_MODE SplineOverScroller mState有三个滚</description>
      </item>
      
      <item>
        <title>Fourth</title>
        <link>https://dshcao.github.io/zh/pt/dir/fourth/</link>
        <pubDate>Wed, 30 Oct 2019 20:48:10 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/pt/dir/fourth/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Third</title>
        <link>https://dshcao.github.io/zh/pt/third/</link>
        <pubDate>Wed, 30 Oct 2019 20:46:30 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/pt/third/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Second</title>
        <link>https://dshcao.github.io/zh/pt/second/</link>
        <pubDate>Wed, 30 Oct 2019 20:45:24 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/pt/second/</guid>
        <description></description>
      </item>
      
      <item>
        <title>First</title>
        <link>https://dshcao.github.io/zh/pt/first/</link>
        <pubDate>Wed, 30 Oct 2019 19:45:20 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/pt/first/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Android AppBundle</title>
        <link>https://dshcao.github.io/zh/posts/android-app-bundle/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-app-bundle/</guid>
        <description>ClassLoader,java的ClassLoader双亲委托机制 干预Android加载，既然要干预那就要首先了解其原加载过程 ## 双亲委托 简</description>
      </item>
      
      <item>
        <title>Android-App启动流程</title>
        <link>https://dshcao.github.io/zh/posts/android-app%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-app%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid>
        <description>Android启动流程 ROM/RAM ROM(Read-Only Memory) RAM(Random Access Memory) Boot ROM 它负责加载引导程序Boot Loader。 Boot Loader 固化在ROM中的引导程序，主要是检查RAM，初始化系统参数</description>
      </item>
      
      <item>
        <title>Android-APT</title>
        <link>https://dshcao.github.io/zh/posts/android-apt/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-apt/</guid>
        <description>APT(Annotation Processor Tool) 注解处理器(APT)它是Java提供的帮我们处理注解的。要实现我们自己的处理注解的逻辑就需要继承Processor接口。 1 2 3 4 5 6 7</description>
      </item>
      
      <item>
        <title>Android-ARouter原理简析</title>
        <link>https://dshcao.github.io/zh/posts/android-arouter%E5%8E%9F%E7%90%86%E7%AE%80%E6%9E%90/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-arouter%E5%8E%9F%E7%90%86%E7%AE%80%E6%9E%90/</guid>
        <description>前言 阿里ARouter是组件开发所需的路由框架。由于组件开发中的类(尤其是Activity)不能直接相互引用，无法使用通常的跳转方式。 隐式跳</description>
      </item>
      
      <item>
        <title>Android-FFmpeg使用</title>
        <link>https://dshcao.github.io/zh/posts/android-ffmpeg%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-ffmpeg%E4%BD%BF%E7%94%A8/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Android-FFmpeg打造自己的播放器</title>
        <link>https://dshcao.github.io/zh/posts/android-ffmpeg%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E6%92%AD%E6%94%BE%E5%99%A8/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-ffmpeg%E6%89%93%E9%80%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E6%92%AD%E6%94%BE%E5%99%A8/</guid>
        <description>如何实现 播放音频 SDL2 AudioTrack OpenSLES ijksdl 播放视频 SDL2 SurfaceView ANativeWindow ijksdl</description>
      </item>
      
      <item>
        <title>Android-Flutter</title>
        <link>https://dshcao.github.io/zh/posts/android-flutter/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-flutter/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Android-JNI&amp;NDK</title>
        <link>https://dshcao.github.io/zh/posts/android-jnindk/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-jnindk/</guid>
        <description>前言 Linux系统Native动态库(.so)、静态库(.a)及目标文件(.o)。 Windows系统Native动态库(.dll)、静态库(</description>
      </item>
      
      <item>
        <title>Android-lottie</title>
        <link>https://dshcao.github.io/zh/posts/android-lottie/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-lottie/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Android-MVC、MVP及MVVM</title>
        <link>https://dshcao.github.io/zh/posts/android-mvcmvp%E5%8F%8Amvvm/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-mvcmvp%E5%8F%8Amvvm/</guid>
        <description>MVC Model+View+Controller Model：Java bean View：视图层 Controller：控制器 MVC在Java Web开发中很常见，但并不适合Android中使用。因</description>
      </item>
      
      <item>
        <title>Android-VR&amp;AR</title>
        <link>https://dshcao.github.io/zh/posts/android-vrarmr/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-vrarmr/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Android-事件分发机制</title>
        <link>https://dshcao.github.io/zh/posts/android-%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91%E6%9C%BA%E5%88%B6/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E4%BA%8B%E4%BB%B6%E5%88%86%E5%8F%91%E6%9C%BA%E5%88%B6/</guid>
        <description>View mAttachInfo初始化 查看View源码可以知道mAttachInfo是在dispatchAttachedToWindow中赋值的 View#dispatchAttachedToWindow 1</description>
      </item>
      
      <item>
        <title>Android-热更新</title>
        <link>https://dshcao.github.io/zh/posts/android-%E7%83%AD%E6%9B%B4%E6%96%B0/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E7%83%AD%E6%9B%B4%E6%96%B0/</guid>
        <description>热修复方案介绍 AndFix Native层函数指针替换，即时生效 QQ控件超级补丁 类加载/multidex，重启生效 Robust 字节码插桩/Instant Run 即时生效</description>
      </item>
      
      <item>
        <title>Android-音视频基础知识(一)</title>
        <link>https://dshcao.github.io/zh/posts/android-%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E9%9F%B3%E8%A7%86%E9%A2%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80/</guid>
        <description>RGB&amp;amp;YUV RGB 红色(R)、绿色(G)、蓝色(B)三原色编码颜色。一般显示器上采用的标准。其中每个原色用一个字节(8bit)表示，一个像素点占用3字节(</description>
      </item>
      
      <item>
        <title>Android四大组件-Activity/Fragment</title>
        <link>https://dshcao.github.io/zh/posts/android%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6-activityfragment/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6-activityfragment/</guid>
        <description>Activity 生命周期 当用户打开新的Activity的时候或者切换到桌面的时候回调onPause-onStop，但是如果此Activity是透明主题，那</description>
      </item>
      
      <item>
        <title>Android四大组件-Service</title>
        <link>https://dshcao.github.io/zh/posts/android%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6-service/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android%E5%9B%9B%E5%A4%A7%E7%BB%84%E4%BB%B6-service/</guid>
        <description>前言 Service Service默认运行在主线程，并不运行在单独线程，因此在Service执行耗时操作容易引起ANR。 IntentService 可用于执行后台耗时的任务，任务执</description>
      </item>
      
      <item>
        <title>Android属性动画</title>
        <link>https://dshcao.github.io/zh/posts/android-%E5%8A%A8%E7%94%BB%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E5%8A%A8%E7%94%BB%E8%AF%A6%E8%A7%A3/</guid>
        <description>帧动画 xml文件存放在res/drawable下面 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;utf-8&amp;#34;?&amp;gt; &amp;lt;animation-list xmlns:android=&amp;#34;http://schemas.android.com/apk/res/android&amp;#34; android:oneshot=&amp;#34;true&amp;#34; android:variablePadding=&amp;#34;false&amp;#34; android:visible=&amp;#34;true&amp;#34;&amp;gt; &amp;lt;item android:drawable=&amp;#34;@drawable/drawable0&amp;#34; android:duration=&amp;#34;200&amp;#34; /&amp;gt; &amp;lt;item android:drawable=&amp;#34;@drawable/drawable1&amp;#34; android:duration=&amp;#34;200&amp;#34; /&amp;gt; &amp;lt;item android:drawable=&amp;#34;@drawable/drawable2&amp;#34; android:duration=&amp;#34;200&amp;#34; /&amp;gt; &amp;lt;/animation-list&amp;gt; item是</description>
      </item>
      
      <item>
        <title>Android打包流程</title>
        <link>https://dshcao.github.io/zh/posts/android-%E6%89%93%E5%8C%85%E6%B5%81%E7%A8%8B/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E6%89%93%E5%8C%85%E6%B5%81%E7%A8%8B/</guid>
        <description>前言 说打包流程前我们先了解几个名词和概念 AAPT(Android Asset Packing Tool) AAPT是一种编译工具，用于Android Studio和Android Gradle Plugin 编译打包应用资源A</description>
      </item>
      
      <item>
        <title>Android插件化</title>
        <link>https://dshcao.github.io/zh/posts/android-%E6%8F%92%E4%BB%B6%E5%8C%96/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-%E6%8F%92%E4%BB%B6%E5%8C%96/</guid>
        <description>开源插件化框架 VirtualAPK、DroidPlugin、RePlugin Hook 实现Hook的技术：1.反射 2.动态代理 查找Hook点的原则 尽</description>
      </item>
      
      <item>
        <title>Android画中画-PictureInPicture</title>
        <link>https://dshcao.github.io/zh/posts/android%E7%94%BB%E4%B8%AD%E7%94%BB-pictureinpicture/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android%E7%94%BB%E4%B8%AD%E7%94%BB-pictureinpicture/</guid>
        <description></description>
      </item>
      
      <item>
        <title>Android直播-录制屏幕</title>
        <link>https://dshcao.github.io/zh/posts/%E7%9B%B4%E6%92%AD-%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E7%9B%B4%E6%92%AD-%E5%BD%95%E5%88%B6%E5%B1%8F%E5%B9%95/</guid>
        <description>录屏的根本是怎么获取屏幕的显示数据 屏幕录制的几种实现方式： Linux+framebuffer+root权限 利用View.getDrawing</description>
      </item>
      
      <item>
        <title>Android直播-采录摄像头</title>
        <link>https://dshcao.github.io/zh/posts/%E7%9B%B4%E6%92%AD-%E9%87%87%E5%BD%95%E6%91%84%E5%83%8F%E5%A4%B4/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E7%9B%B4%E6%92%AD-%E9%87%87%E5%BD%95%E6%91%84%E5%83%8F%E5%A4%B4/</guid>
        <description></description>
      </item>
      
      <item>
        <title>ANR分析</title>
        <link>https://dshcao.github.io/zh/posts/anr%E5%88%86%E6%9E%90/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/anr%E5%88%86%E6%9E%90/</guid>
        <description></description>
      </item>
      
      <item>
        <title>git 详解</title>
        <link>https://dshcao.github.io/zh/posts/git-%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/git-%E8%AF%A6%E8%A7%A3/</guid>
        <description>[http] proxy = 127.0.0.1:1081 [https] proxy = 127.0.0.1:1081</description>
      </item>
      
      <item>
        <title>HashMap源码分析</title>
        <link>https://dshcao.github.io/zh/posts/java-hashmap%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/java-hashmap%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
        <description>以JDK8源码分析 前言 HashMap是结合数组和链表，以Key-Value形式存储的集合。HashMap中有三个个概念：负载因子(loadF</description>
      </item>
      
      <item>
        <title>Java ThreadLocal源码解析</title>
        <link>https://dshcao.github.io/zh/posts/java-threadlocal%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/java-threadlocal%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</guid>
        <description>ThreadLocal应用场景 ThreadLocal适合需要在不同线程存储不同且唯一的上下文信息的场景 魔数0x61c88647 0x61c88</description>
      </item>
      
      <item>
        <title>Java注解详解</title>
        <link>https://dshcao.github.io/zh/posts/java-%E6%B3%A8%E8%A7%A3%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/java-%E6%B3%A8%E8%A7%A3%E8%AF%A6%E8%A7%A3/</guid>
        <description>前言 Java注解是JDK5提供的，用于为代码提供元数据。注解不直接影响代码执行。 注解也是接口类型。即反射时：annotationClass.</description>
      </item>
      
      <item>
        <title>Java范型与反射</title>
        <link>https://dshcao.github.io/zh/posts/java-%E8%8C%83%E5%9E%8B%E4%B8%8E%E5%8F%8D%E5%B0%84/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/java-%E8%8C%83%E5%9E%8B%E4%B8%8E%E5%8F%8D%E5%B0%84/</guid>
        <description>前言 泛型 ？ extends X 表示类型的上界，类型参数是X的子类 ？ super X 表示类型的下界，类型参数是X的超类 示例一： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 class</description>
      </item>
      
      <item>
        <title>Jetpack-CameraX</title>
        <link>https://dshcao.github.io/zh/posts/jetpack-camerax/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jetpack-camerax/</guid>
        <description>一、camera2 CameraX是Jetpack对camera2功能的封装，并可向后兼容至 Android 5.0（API 级别 21）</description>
      </item>
      
      <item>
        <title>JVM/Dalvik/ART</title>
        <link>https://dshcao.github.io/zh/posts/jvmdalvikart/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/jvmdalvikart/</guid>
        <description>前置知识 Android中每个应用都对应一个单独的虚拟机，独立运行 JIT&amp;amp;AOT JIT，Just-in-time，即时编译，运行时动态编译。在运行时将频繁</description>
      </item>
      
      <item>
        <title>Kotlin协程</title>
        <link>https://dshcao.github.io/zh/posts/kotlin-%E5%8D%8F%E7%A8%8B/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/kotlin-%E5%8D%8F%E7%A8%8B/</guid>
        <description>协程中又一个概念CPS(Continuation Passing Style) 协程是用户态的行为类似线程的库 用户态：不想线程在用户态和内核态切换 类似线程：只是行为类似</description>
      </item>
      
      <item>
        <title>RxJava2源码及使用</title>
        <link>https://dshcao.github.io/zh/posts/rxjava2%E6%BA%90%E7%A0%81%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/rxjava2%E6%BA%90%E7%A0%81%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
        <description>前言 RxJava是一个响应式的异步事件流编程库。 RxJava的优势： 函数式编程，代码逻辑清晰，优雅 避险回调地狱 方便的线程调度 RxJava中主</description>
      </item>
      
      <item>
        <title>SparseArray源码解析</title>
        <link>https://dshcao.github.io/zh/posts/android-sparsearray%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/android-sparsearray%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</guid>
        <description>前言 SparseArray是谷歌推荐使用的数据结构，可以取代部分HashMap功能。为什么是部分？因为SparseArray是以int为ke</description>
      </item>
      
      <item>
        <title>依赖注入和控制反转(IoC)</title>
        <link>https://dshcao.github.io/zh/posts/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E5%92%8C%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%ACioc/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%E5%92%8C%E6%8E%A7%E5%88%B6%E5%8F%8D%E8%BD%ACioc/</guid>
        <description>控制反转(IoC) Java设计六大原则中有一项是依赖倒置，简单说就是面向接口编程。 比如Java中每个Service都有一个接口类和实现类，接</description>
      </item>
      
      <item>
        <title>多线程详解</title>
        <link>https://dshcao.github.io/zh/posts/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%A6%E8%A7%A3/</guid>
        <description>前置知识 线程是CPU调度的最小单位。 进程是系统进行程序资源分配的最小单位，线程之间共享所在进程的资源。 一个进程至少有一个线程，一个线程必须依</description>
      </item>
      
      <item>
        <title>多线程详解补充</title>
        <link>https://dshcao.github.io/zh/posts/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%A1%A5%E5%85%85/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%A1%A5%E5%85%85/</guid>
        <description>Java内存模型 Java内存模型主要目标：定义程序中各个变量的访问规则，即在虚拟机中将变量存储到内存和从内存中取出变量这样的底层细节。此处的</description>
      </item>
      
      <item>
        <title>数据结构与算法</title>
        <link>https://dshcao.github.io/zh/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</guid>
        <description>前言 程序 = 数据结构 + 算法 似乎数据结构和算法是两码事，但实际有时候数据结构和算法联系非常亲密，可以说有了这种数据结构才有了这种算法或者说有了这</description>
      </item>
      
      <item>
        <title>算法-快速排序算法</title>
        <link>https://dshcao.github.io/zh/posts/%E7%AE%97%E6%B3%95-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E7%AE%97%E6%B3%95-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
        <description>前言 快速排序算法(Quick Sort)是对冒泡排序算法的改进。 算法思想 任意取一数据(比如数组中一个元素)作为关键数据，称为基准数(Pivot</description>
      </item>
      
      <item>
        <title>缓存及LRU源码解析</title>
        <link>https://dshcao.github.io/zh/posts/%E7%BC%93%E5%AD%98%E5%8F%8Alru%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E7%BC%93%E5%AD%98%E5%8F%8Alru%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/</guid>
        <description>占坑，敬请期待&amp;hellip; LRU实际上是对访问排序LinkedHashMap的封装</description>
      </item>
      
      <item>
        <title>编程基础</title>
        <link>https://dshcao.github.io/zh/posts/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80/</guid>
        <description>字长 字长是CPU的主要技术指标之一，指的是CPU一次最大能并行处理的二进制位数 现在主流的计算机字长是32位与64位 原码&amp;amp;反码&amp;amp</description>
      </item>
      
      <item>
        <title>网络基础</title>
        <link>https://dshcao.github.io/zh/posts/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/</guid>
        <description>TCP/IP和OSI TCP/IP协议簇 TCP/IP协议簇既然是以TCP和IP两个协议命名，足以说明TCP和IP两个协议在这个协议簇中的重要性</description>
      </item>
      
      <item>
        <title>自定义View-measure&amp;layout</title>
        <link>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-measurelayoutdraw/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-measurelayoutdraw/</guid>
        <description>View&amp;amp;ViewGroup的自定义 measure/onMeasure measure 是View测量自己所需空间的方法，通常是调用onMeasure方法完成子控件的测量并最终确定</description>
      </item>
      
      <item>
        <title>自定义View-PullLayout</title>
        <link>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-pulllayout/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E8%87%AA%E5%AE%9A%E4%B9%89view-pulllayout/</guid>
        <description></description>
      </item>
      
      <item>
        <title>设计模式</title>
        <link>https://dshcao.github.io/zh/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
        <description>设计模式是解决问题的思想，是前辈总结的成熟的设计方案。 设计的总原则是：低耦合、高内聚，实现可复用，易维护。 设计模式原则 开闭原则 对扩展开放，对</description>
      </item>
      
      <item>
        <title>贝塞尔曲线(Bezier curve)</title>
        <link>https://dshcao.github.io/zh/posts/%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E8%B4%9D%E5%A1%9E%E5%B0%94%E6%9B%B2%E7%BA%BF/</guid>
        <description>前置知识 Bezier曲线是用一系列点控制曲线状态的，主要分为： 数据点 确定曲线的起始和结束位置 控制点 确定曲线的弯曲程度 其中数据点又叫锚点，只有</description>
      </item>
      
      <item>
        <title>关于</title>
        <link>https://dshcao.github.io/zh/about/</link>
        <pubDate>Thu, 28 Feb 2019 00:00:00 +0000</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/about/</guid>
        <description>GitHub. 掘金. 微博.</description>
      </item>
      
      <item>
        <title>随记</title>
        <link>https://dshcao.github.io/zh/notes/android/%E9%9A%8F%E8%AE%B0/</link>
        <pubDate>Wed, 11 Oct 2017 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/notes/android/%E9%9A%8F%E8%AE%B0/</guid>
        <description>一、Manifest配置 allowBackup fullBackupContent https://developer.android.com/guide/topics/data/autobackup allowBackup配置用来开启停用自动备份 fullBackupContent用来配置配分规则，如：andr</description>
      </item>
      
      <item>
        <title>Note-1</title>
        <link>https://dshcao.github.io/zh/notes/java/note-1/</link>
        <pubDate>Sun, 09 Oct 2016 11:44:14 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/notes/java/note-1/</guid>
        <description>post-1 content
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eget enim lobortis, bibendum massa et, bibendum enim. Nunc eu augue quis ante porta sodales. Mauris vel faucibus magna, dictum sagittis dolor. Nam scelerisque malesuada efficitur. Donec consequat sodales justo, ut aliquam ligula maximus nec. Quisque metus tellus, tincidunt eu consequat consequat, placerat sed ante. Cras pulvinar eros ex, vel luctus eros viverra sed. Donec nec quam aliquam, ultricies neque sed, sollicitudin lorem.</description>
      </item>
      
      <item>
        <title>Note-2</title>
        <link>https://dshcao.github.io/zh/notes/java/note-2/</link>
        <pubDate>Sun, 09 Oct 2016 11:44:14 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/notes/java/note-2/</guid>
        <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eget enim lobortis, bibendum massa et, bibendum enim. Nunc eu augue quis ante porta sodales. Mauris vel faucibus magna, dictum sagittis dolor. Nam scelerisque malesuada efficitur. Donec consequat sodales justo, ut aliquam ligula maximus nec.</description>
      </item>
      
      <item>
        <title>Note-3</title>
        <link>https://dshcao.github.io/zh/notes/java/note-3/</link>
        <pubDate>Sun, 09 Oct 2016 11:44:14 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/notes/java/note-3/</guid>
        <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut eget enim lobortis, bibendum massa et, bibendum enim. Nunc eu augue quis ante porta sodales. Mauris vel faucibus magna, dictum sagittis dolor. Nam scelerisque malesuada efficitur. Donec consequat sodales justo, ut aliquam ligula maximus nec.</description>
      </item>
      
      <item>
        <title>Go 1</title>
        <link>https://dshcao.github.io/zh/notes/java/go/go-1/go-1-1/go-1/</link>
        <pubDate>Thu, 01 Nov 2012 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/notes/java/go/go-1/go-1-1/go-1/</guid>
        <description>Dolore in consectetur irure qui laborum. Adipisicing cillum ad laboris dolor. Quis consectetur ullamco esse ad mollit anim sint nostrud esse. Irure voluptate ex fugiat voluptate ea fugiat laboris.
Veniam deserunt ex ullamco laboris et elit culpa enim. Irure ipsum dolore sint nisi aliquip labore fugiat magna esse ad nostrud in. Eu aliqua mollit tempor proident pariatur voluptate.</description>
      </item>
      
      <item>
        <title>Go 2</title>
        <link>https://dshcao.github.io/zh/notes/java/go/go-1/go-2/</link>
        <pubDate>Thu, 01 Nov 2012 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/notes/java/go/go-1/go-2/</guid>
        <description>Dolore in consectetur irure qui laborum. Adipisicing cillum ad laboris dolor. Quis consectetur ullamco esse ad mollit anim sint nostrud esse. Irure voluptate ex fugiat voluptate ea fugiat laboris.
Veniam deserunt ex ullamco laboris et elit culpa enim. Irure ipsum dolore sint nisi aliquip labore fugiat magna esse ad nostrud in. Eu aliqua mollit tempor proident pariatur voluptate.</description>
      </item>
      
      <item>
        <title>Go 4</title>
        <link>https://dshcao.github.io/zh/notes/java/go/go-4/</link>
        <pubDate>Thu, 01 Nov 2012 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/notes/java/go/go-4/</guid>
        <description>Dolore in consectetur irure qui laborum. Adipisicing cillum ad laboris dolor. Quis consectetur ullamco esse ad mollit anim sint nostrud esse. Irure voluptate ex fugiat voluptate ea fugiat laboris.
Veniam deserunt ex ullamco laboris et elit culpa enim. Irure ipsum dolore sint nisi aliquip labore fugiat magna esse ad nostrud in. Eu aliqua mollit tempor proident pariatur voluptate.</description>
      </item>
      
      <item>
        <title>Go 5</title>
        <link>https://dshcao.github.io/zh/notes/java/go/go-1/go-1-1/go-1-1-1/go-5/</link>
        <pubDate>Thu, 01 Nov 2012 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/notes/java/go/go-1/go-1-1/go-1-1-1/go-5/</guid>
        <description>Dolore in consectetur irure qui laborum. Adipisicing cillum ad laboris dolor. Quis consectetur ullamco esse ad mollit anim sint nostrud esse. Irure voluptate ex fugiat voluptate ea fugiat laboris.
Veniam deserunt ex ullamco laboris et elit culpa enim. Irure ipsum dolore sint nisi aliquip labore fugiat magna esse ad nostrud in. Eu aliqua mollit tempor proident pariatur voluptate.</description>
      </item>
      
    
  </channel>
</rss>