<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on dshcao blog</title>
    <link>https://dshcao.github.io/zh/categories/java/</link>
    <description>Recent content in java on dshcao blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <managingEditor>513996717@qq.com (dshcao)</managingEditor>
    <webMaster>513996717@qq.com (dshcao)</webMaster>
    <copyright>&amp;copy;{year}, All Rights Reserved</copyright>
    <lastBuildDate>Fri, 11 Oct 2019 10:33:41 +0900</lastBuildDate>
    
        <atom:link href="https://dshcao.github.io/zh/categories/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>RxJava2源码及使用</title>
        <link>https://dshcao.github.io/zh/posts/rxjava2%E6%BA%90%E7%A0%81%E5%8F%8A%E4%BD%BF%E7%94%A8/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/rxjava2%E6%BA%90%E7%A0%81%E5%8F%8A%E4%BD%BF%E7%94%A8/</guid>
        <description></description>
      </item>
      
      <item>
        <title>多线程详解</title>
        <link>https://dshcao.github.io/zh/posts/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%A6%E8%A7%A3/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%AF%A6%E8%A7%A3/</guid>
        <description>前置知识 线程状态： 初始态（NEW） 运行态（RUNNABLE） 就绪态（READY） 运行态（RUNNNIN） 阻塞态（BLOCKED） 等待态（WA</description>
      </item>
      
      <item>
        <title>多线程详解补充</title>
        <link>https://dshcao.github.io/zh/posts/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%A1%A5%E5%85%85/</link>
        <pubDate>Fri, 11 Oct 2019 10:33:41 +0900</pubDate>
        <author>513996717@qq.com (dshcao)</author>
        <guid>https://dshcao.github.io/zh/posts/%E5%A4%9A%E7%BA%BF%E7%A8%8B%E8%A1%A5%E5%85%85/</guid>
        <description>Java内存模型 Java内存模型主要目标：定义程序中各个变量的访问规则，即在虚拟机中将变量存储到内存和从内存中取出变量这样的底层细节。此处的</description>
      </item>
      
    
  </channel>
</rss>